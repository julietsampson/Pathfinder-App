{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/julietsampson/gh-website/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";var node={row:0,col:0,visited:false,distance:Infinity};export default function dijkstra(grid,startNode,endNode){var visited=[];var unvisited=getAllNodes(grid);startNode.distance=0;unvisited[startNode.row][startNode.col]=startNode;/*\n    if (!startNode || !endNode || startNode === endNode) {\n        return false;\n    } */var i=0;while(unvisited.length){sortNodesByDistance(unvisited);var currNode=unvisited.shift();if(currNode.isWall){console.log(\"---DIJKSTRA HITS WALL---\");console.log(currNode.row);console.log(currNode.col);console.log(\"------------------------\");continue;}//handles situations where there is no possible path to endNode\nif(currNode.distance===Infinity){return visited;}currNode.visited=true;visited.push(currNode);if(currNode===endNode){return visited;}updateNeighbors(currNode,grid);}}function sortNodesByDistance(unvisited){unvisited.sort(function(nodeA,nodeB){return nodeA.distance-nodeB.distance;});}function updateNeighbors(node,grid){var neighbors=getNeighbors(node,grid);var _iterator=_createForOfIteratorHelper(neighbors),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var neighbor=_step.value;var distance=node.distance+1;if(!neighbor.visited){neighbor.distance=distance;neighbor.previous=node;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}function getNeighbors(node,grid){var neighbors=[];var col=node.col,row=node.row;if(row>0){neighbors.push(grid[row-1][col]);}if(row<grid.length-1)neighbors.push(grid[row+1][col]);if(col>0)neighbors.push(grid[row][col-1]);if(col<grid[0].length-1)neighbors.push(grid[row][col+1]);return neighbors;}function getAllNodes(grid){var nodes=[];var _iterator2=_createForOfIteratorHelper(grid),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var row=_step2.value;var _iterator3=_createForOfIteratorHelper(row),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _node=_step3.value;nodes.push(_node);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return nodes;}","map":{"version":3,"names":["node","row","col","visited","distance","Infinity","dijkstra","grid","startNode","endNode","unvisited","getAllNodes","i","length","sortNodesByDistance","currNode","shift","isWall","console","log","push","updateNeighbors","sort","nodeA","nodeB","neighbors","getNeighbors","neighbor","previous","nodes"],"sources":["/Users/julietsampson/gh-website/src/algorithms/dijkstra.js"],"sourcesContent":["let node = {\n    row: 0,\n    col: 0,\n    visited: false,\n    distance: Infinity,\n}\n\nexport default function dijkstra(grid, startNode, endNode) {\n    const visited = [];\n    let unvisited = getAllNodes(grid);\n    startNode.distance = 0;\n    unvisited[startNode.row][startNode.col] = startNode\n    /*\n    if (!startNode || !endNode || startNode === endNode) {\n        return false;\n    } */\n    let i = 0;\n    while (unvisited.length) {\n        sortNodesByDistance(unvisited);\n        const currNode = unvisited.shift();\n        if (currNode.isWall) {\n            console.log(\"---DIJKSTRA HITS WALL---\");\n            console.log(currNode.row);\n            console.log(currNode.col);\n            console.log(\"------------------------\");\n            continue;\n        }\n        //handles situations where there is no possible path to endNode\n        if (currNode.distance === Infinity) {\n            return visited;\n        }\n        currNode.visited = true;\n        visited.push(currNode);\n        if (currNode === endNode) {\n            return visited;\n        }\n        updateNeighbors(currNode, grid);\n    }\n}\n\nfunction sortNodesByDistance(unvisited) {\n    unvisited.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\n}\n\nfunction updateNeighbors(node, grid) {\n    const neighbors = getNeighbors(node, grid);\n    for (const neighbor of neighbors) {\n        const distance = node.distance + 1\n        if (!neighbor.visited) {\n            neighbor.distance = distance;\n            neighbor.previous = node;\n        }\n    }\n}\n\nfunction getNeighbors(node, grid) {\n    const neighbors = [];\n    const {col, row} = node;\n    if (row > 0) {\n        neighbors.push(grid[row-1][col]);\n    }\n    if (row<(grid.length-1)) neighbors.push(grid[row+1][col]);\n    if (col > 0) neighbors.push(grid[row][col-1]);\n    if (col < (grid[0].length-1)) neighbors.push(grid[row][col+1]);\n    return neighbors;\n}\n\nfunction getAllNodes(grid) {\n    const nodes = [];\n    for (const row of grid) {\n        for (const node of row) {\n            nodes.push(node);\n        }\n    }\n    return nodes;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}