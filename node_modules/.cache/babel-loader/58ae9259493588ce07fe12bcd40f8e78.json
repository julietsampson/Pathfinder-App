{"ast":null,"code":"var _jsxFileName = \"/Users/julietsampson/pathfinder/src/Pathfinder/Pathfinder.jsx\";\nimport React, { Component } from 'react';\nimport Node from './Node/Node';\nimport './Pathfinder.css';\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Pathfinder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: []\n    };\n  }\n\n  componentDidMount() {\n    const nodes = [];\n\n    for (let row = 0; row < 15; row++) {\n      const currRow = [];\n\n      for (let col = 0; col < 50; col++) {\n        const currNode = {\n          col,\n          row,\n          isStartNode: row === 10 && col === 5,\n          isEndNode: row === 10 && col === 45\n        };\n        currRow.push([]);\n      }\n\n      nodes.push(currRow);\n    }\n\n    this.setState({\n      nodes\n    });\n  }\n\n  render() {\n    const {\n      nodes\n    } = this.state;\n    console.log(nodes);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: nodes.map((row, rowIndex) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: row.map((node, nodeIndex) => {\n            const {\n              isStartNode,\n              isEndNode\n            } = node;\n            return /*#__PURE__*/_jsxDEV(Node, {\n              isStartNode: isStartNode,\n              isEndNode: isEndNode,\n              test: 'foo',\n              test: 'kappa'\n            }, nodeIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this);\n          })\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","Node","render","Pathfinder","constructor","props","state","nodes","componentDidMount","row","currRow","col","currNode","isStartNode","isEndNode","push","setState","console","log","map","rowIndex","node","nodeIndex"],"sources":["/Users/julietsampson/pathfinder/src/Pathfinder/Pathfinder.jsx"],"sourcesContent":["import React, {Component} from 'react';\nimport Node from './Node/Node';\n\nimport './Pathfinder.css';\nimport { render } from '@testing-library/react';\n\nexport default class Pathfinder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nodes: [],\n        };\n    }\n\n    componentDidMount() {\n        const nodes = [];\n        for (let row = 0; row < 15; row++) {\n            const currRow = [];\n            for (let col = 0; col < 50; col++) {\n                const currNode = {\n                    col,\n                    row,\n                    isStartNode: row === 10 && col === 5,\n                    isEndNode: row === 10 && col === 45,\n                };\n                currRow.push([]);\n            }\n            nodes.push(currRow);\n        }\n        this.setState({nodes})\n    }\n\n    render() {\n        const {nodes} = this.state;\n        console.log(nodes)\n        return (\n            <div className=\"grid\">\n                {nodes.map((row, rowIndex) => {\n                    return (\n                        <div key={rowIndex}>\n                        {row.map((node, nodeIndex) => {\n                            const{isStartNode, isEndNode} = node;\n                            return (\n                                <Node\n                                    key={nodeIndex}\n                                    isStartNode={isStartNode}\n                                    isEndNode={isEndNode}\n                                    test={'foo'}\n                                    test={'kappa'}></Node>\n                            );\n                        })}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,kBAAP;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,eAAe,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;EAC9CI,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACTC,KAAK,EAAE;IADE,CAAb;EAGH;;EAEDC,iBAAiB,GAAG;IAChB,MAAMD,KAAK,GAAG,EAAd;;IACA,KAAK,IAAIE,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAmC;MAC/B,MAAMC,OAAO,GAAG,EAAhB;;MACA,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAmC;QAC/B,MAAMC,QAAQ,GAAG;UACbD,GADa;UAEbF,GAFa;UAGbI,WAAW,EAAEJ,GAAG,KAAK,EAAR,IAAcE,GAAG,KAAK,CAHtB;UAIbG,SAAS,EAAEL,GAAG,KAAK,EAAR,IAAcE,GAAG,KAAK;QAJpB,CAAjB;QAMAD,OAAO,CAACK,IAAR,CAAa,EAAb;MACH;;MACDR,KAAK,CAACQ,IAAN,CAAWL,OAAX;IACH;;IACD,KAAKM,QAAL,CAAc;MAACT;IAAD,CAAd;EACH;;EAEDL,MAAM,GAAG;IACL,MAAM;MAACK;IAAD,IAAU,KAAKD,KAArB;IACAW,OAAO,CAACC,GAAR,CAAYX,KAAZ;IACA,oBACI;MAAK,SAAS,EAAC,MAAf;MAAA,UACKA,KAAK,CAACY,GAAN,CAAU,CAACV,GAAD,EAAMW,QAAN,KAAmB;QAC1B,oBACI;UAAA,UACCX,GAAG,CAACU,GAAJ,CAAQ,CAACE,IAAD,EAAOC,SAAP,KAAqB;YAC1B,MAAK;cAACT,WAAD;cAAcC;YAAd,IAA2BO,IAAhC;YACA,oBACI,QAAC,IAAD;cAEI,WAAW,EAAER,WAFjB;cAGI,SAAS,EAAEC,SAHf;cAII,IAAI,EAAE,KAJV;cAKI,IAAI,EAAE;YALV,GACSQ,SADT;cAAA;cAAA;cAAA;YAAA,QADJ;UAQH,CAVA;QADD,GAAUF,QAAV;UAAA;UAAA;UAAA;QAAA,QADJ;MAeH,CAhBA;IADL;MAAA;MAAA;MAAA;IAAA,QADJ;EAqBH;;AAlD6C"},"metadata":{},"sourceType":"module"}